name: release
on:
  release:
    types:
      - created

jobs:
  release-binary:
    name: release-binary
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: set up go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - uses: actions/cache@v2.1.3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_BINTRAY_SECRET: ${{ secrets.BINTRAY_API_KEY }}

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Put binaries to Bintray
        working-directory: dist
        run: |
          BINTRAY_PATH=https://api.bintray.com/content/tetrate/getistio/getistio/${{ env.RELEASE_VERSION }}
          curl -T ./getistio_darwin_amd64.tar.gz -ugetistio-bot:${{ secrets.BINTRAY_API_KEY }} ${BINTRAY_PATH}/getistio_darwin_amd64_${{ env.RELEASE_VERSION }}.tar.gz
          curl -T ./getistio_linux_amd64.tar.gz -ugetistio-bot:${{ secrets.BINTRAY_API_KEY }} ${BINTRAY_PATH}/getistio_linux_amd64_${{ env.RELEASE_VERSION }}.tar.gz
          curl -ugetistio-bot:${{ secrets.BINTRAY_API_KEY }} -XPOST ${BINTRAY_PATH}/publish

      - name: Push manifest
        run: |
          BINTRAY_PATH=https://api.bintray.com/content/tetrate/getistio/manifest/latest
          curl -T manifest.json -ugetistio-bot:${{ secrets.BINTRAY_API_KEY }} "${BINTRAY_PATH}/manifest.json?override=1&publish=1"

      - name: Push download script
        run: |
          BINTRAY_PATH=https://api.bintray.com/content/tetrate/getistio/download/latest
          curl -T download.sh -ugetistio-bot:${{ secrets.BINTRAY_API_KEY }} "${BINTRAY_PATH}/download.sh?override=1&publish=1"

  post-release-check:
    needs: [release-binary]
    name: post-release-check
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Download the latest getistio
        run: curl -sL https://tetrate.bintray.com/getistio/download.sh | bash

      - name: Check version
        run: |
          version=${{ env.RELEASE_VERSION }}
          ~/.getistio/bin/getistio version --remote=false | grep ${version:1}

  release-doc:
    needs: [post-release-check]
    name: release-doc
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: checkout
        uses: actions/checkout@v2

      - name: clone
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.GETISTIO_IO_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          git clone git@github.com:tetratelabs/getistio.io.git getistio.io

      - name: cp
        run: |
          cp -r doc/en/* getistio.io/content/en/
          find doc/en/ -type f -name "_index.md" -print0 | xargs -0 sed -i -e "s/\/getistio-cli\/reference/\/zh\/getistio-cli\/reference/g"
          cp -r doc/en/* getistio.io/content/zh/

      - name: commit
        working-directory: getistio.io
        run: |
          git config --global user.email "getistio@tetrate.io"
          git config --global user.name "getistio"
          git checkout main
          git add content/
          git commit -a -m "Update docs from the getistio ${{ env.RELEASE_VERSION }} release"

      - name: push
        working-directory: getistio.io
        run: |
          git push origin main
